@use 'overlay';
@use 'elevation';
@use 'breakpoints';
@include breakpoints.use(s,m){

}

@mixin enabled($scale: 1) {
  @include overlay.create(0, $scale);
}

@mixin hover($scale: 1) {
  @include overlay.create(var(--state-hover-alpha), $scale);
}

@mixin focused($scale: 1) {
  @include overlay.create(var(--state-focused-alpha), $scale);
}

@mixin pressed($scale: 1) {
  @include overlay.create(var(--state-pressed-alpha), $scale);
}

@mixin dragged($scale: 1) {
  @include overlay.create(var(--state-dragged-alpha), $scale);
}

@mixin selected($scale: 1) {
  @include overlay.create(var(--state-selected-alpha), $scale);
}

@mixin disabled($scale: 1) {
  @include overlay.create(0, $scale);
  opacity: var(--state-disabled-alpha);
  cursor: default;
}

@mixin interactive {
  @include enabled;
  user-select: none;
  cursor: pointer;

  @media (hover) {
    &:hover {
      @include hover;
    }
  }

  &:focus, &.has-focus {
    @include focused;
  }

  &:active {
    @include pressed;
  }

  &.dragged {
    @include dragged;
    @include elevation.get(8);
  }

  &.selected {
    @include selected;
  }

  &.disabled, &[disabled] {
    @include disabled;
  }
}

@mixin interactive-primary {
  --primary-constrast-patch: 1;
  @include interactive;
  --color-surface: var(--color-primary);
  --color-on-surface: var(--color-on-primary);
  --color-overlay: white;
}

@mixin interactive-circle {
  @include enabled(.1);
  border-radius: 50%;
  user-select: none;
  cursor: pointer;

  @media (hover) {
    &:hover {
      @include hover(1.25);
    }
  }

  &:focus, &.has-focus {
    @include focused(1.25);
  }

  &:active {
    @include pressed(1.25);
  }

  &.dragged {
    @include dragged(1.25);
    @include elevation.get(8);
  }

  &.selected {
    @include selected(1.25);
  }

  &.disabled, &[disabled] {
    @include disabled;
  }
}

