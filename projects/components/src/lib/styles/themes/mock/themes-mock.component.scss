@use 'elevation';
@use 'breakpoints';
@use 'typography';

.label {
  @include typography.display-s;
}

.items {
  margin-top: var(--gap-l);
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--gap-xl);

  @include breakpoints.m {
    grid-template-columns: 1fr 1fr;
  }

  @include breakpoints.use(l, xl) {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

.card {
  background-color: var(--color-surface);
  border-radius: var(--border-radius-l);
}

.color {
  height: 9rem;
  position: relative;
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  box-shadow: 0 1px 0px var(--color-emphasis-2);
  z-index: 1;
  overflow: hidden;

  &::after {
    content: '';
    background-color: currentColor;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  &::before {
    $c: var(--color-emphasis-1);
    background: linear-gradient(45deg, $c 25%, transparent 0),
    linear-gradient(-45deg, $c 25%, transparent 0),
    linear-gradient(45deg, transparent 75%, $c 0),
    linear-gradient(-45deg, transparent 75%, $c 0);
    background-size: 1rem 1rem;
    background-position: 0 0, 0 .5rem, .5rem -.5rem, -.5rem 0;
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
  }
}

.description {
  padding: var(--gap-m);
  display: flex;
  flex-direction: column;
  gap: var(--gap-s);

  .key {
    font-weight: bold;
  }

  .value {
    color: var(--color-emphasis-4);
  }
}

:host {
  display: flex;
  flex-direction: column;
  gap: 3rem;
  padding: var(--gap-xl);
}
